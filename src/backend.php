<?php

namespace pdima88\icms2currencyrates;

use cmsBackend;
use cmsController;
use cmsUser;
use Exception;
use pdima88\icms2currencyrates\frontend as currencyrates;

class backend extends cmsBackend {

	public $useDefaultOptionsAction = true;

	public function actionIndex(){
		$this->redirectToAction('options');
	}


	public function before($action_name)
	{
		if ($action_name == 'options') {
			$this->setCallback('actionoptions', [__CLASS__.'::onOptionsSave']);
		};
		return parent::before($action_name); // TODO: Change the autogenerated stub
	}

	/**
	 * @param cmsController $controller
	 * @param $options
	 * @throws Exception
	 */
	public static function onOptionsSave($controller, $options) {
		$autoUpdateOn = $options['auto_update'] ?? 0;

		$curRatesControllerName = currencyrates::getInstance()->name;
		$modelAdmin = $controller->model_admin;
		$task = $modelAdmin->filterEqual('controller', $curRatesControllerName)
			->filterEqual('hook', 'rateupdate')->getSchedulerTasks();
		if (!$task) {
			$task = [
				'title' => 'Автообновление курса валют с сайта ЦБ РУз (cbu.uz)',
				'controller' => $curRatesControllerName,
				'hook' => 'rateupdate',
				'period' => 120,
				'is_active' => $autoUpdateOn,
			];
			$modelAdmin->addSchedulerTask($task);
			cmsUser::addSessionMessage('Создана задача автообновления курса валют в планировщике');
		} else {
			foreach ($task as $taskId => $t) {
				$modelAdmin->updateSchedulerTask($taskId, ['is_active' => $autoUpdateOn]);
			}
		}
	}

	protected function validateParamsCount($class, $method_name, $params)
	{
		return true;
	}

	public function getBackendMenu(){
		return array(

			array(
				'title' => 'Курсы валют ЦБ РУз',
				'url' => href_to($this->root_url, 'rates')
			),
			array(
				'title' => 'Архив курсов валют',
				'url' => href_to($this->root_url, 'archive')
			),
			array(
				'title' => 'Другие единицы',
				'url' => href_to($this->root_url, 'units')
			),
			array(
				'title' => 'Настройки',
				'url' => href_to($this->root_url, 'options')
			),
		);
	}

}